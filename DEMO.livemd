# DEMO

```elixir
# TODO, install package from hex.

# At the moment, attach the runner to a running mix:
# iex --sname relations --cookie bobbie mix run --no-start
```

## Running test in :dev via ExUnit

```elixir
ExUnit.start(autorun: false)
continuous_test_files = Path.wildcard("test/ex_unit_continuous/usage/*.exs")
```

```elixir
test_modules =
  continuous_test_files
  |> Enum.flat_map(fn f -> Code.compile_file(f) end)
  |> Enum.map(fn {m, _} -> m end)
```

```elixir
# Running all tests
# CAREFUL : sync tests (with potential side-effects) are also run
ExUnit.run(test_modules)
```

```elixir
ExUnit.run(test_modules)
```

## Using ExUnitContinuous.Runner instead

```elixir
# Currently not needed
# ExUnitContinuous.Supervisor.start()
# test_modules

updated = ExUnitContinuous.Updater.compile!("test/ex_unit_continuous/usage/compiled_tests.ex")
```

```elixir
ExUnitContinuous.Runner.run(updated)
```

### Source File change

Go on and change the original test file.

The next code cell will force the update of the module,by recompiling its source file.

```elixir
for m <- updated do
  ExUnitContinuous.Updater.ensure_updated(m)
end
```

```elixir
ExUnitContinuous.Runner.run(updated)
```
